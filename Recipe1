#!/bin/bash

# This file is designed to run in debian stretch docker images.

# Set architecture (armhf, arm64)
ARCH=$1

# Set Qt version to be compiled
QTVERSION=v5.15.2

set -e # Halt on error
set -x # Be verbose

# Fetch dependencies for Qt compilation
echo "fetching dependencies for arm arch: $ARCH"

# Fetch x86_64 dependencies
apt-get update
apt-get install -y \
  apt-utils \
  g++ \
  git \
  cmake \
  wget \
  pkg-config \
  python \
  perl \
  gperf \
  bison \
  p7zip-full \
  flex

# if [ "$ARCH" == "armhf" ]
# then
#   # Needed for v8, part of QtWebEngine
#   # Some libraries should be compiled for i386 (32bit)
#   dpkg --add-architecture i386
#   apt-get update
#   apt-get install -y \
#     gcc-multilib \
#     g++-multilib \
#     linux-libc-dev:i386
# fi

ARCHITECTURE=arm-linux-gnueabihf
XPLATFORM=linux-arm-gnueabihf

if [ "$ARCH" == "armhf" ]
then
  ARCHITECTURE=arm-linux-gnueabihf
  XPLATFORM=linux-arm-gnueabihf
elif [ "$ARCH" == "arm64" ]
then
  ARCHITECTURE=aarch64-linux-gnu
  XPLATFORM=linux-aarch64-gnu
fi

# allow to download $ARCH-specific packages
dpkg --add-architecture $ARCH

apt-get update
apt-get install -y \
  crossbuild-essential-$ARCH \
  binutils-$ARCHITECTURE \
  qemu \
  binfmt-support \
  qemu-user-static \
  cross-gcc-dev \
  xz-utils

apt-get install -y \
    libsndfile1-dev:$ARCH \
    libasound2-dev:$ARCH \
    portaudio19-dev:$ARCH \
    libportmidi-dev:$ARCH \
    zlib1g-dev:$ARCH \
    libfreetype6:$ARCH \
    libfreetype6-dev:$ARCH \
    libmp3lame-dev:$ARCH \
    libssl1.1:$ARCH \
    libssl-dev:$ARCH \
    libdrm-dev:$ARCH \
    libgl1-mesa-dev:$ARCH \
    libpulse-dev:$ARCH \
    libcups2:$ARCH \
    libcups2-dev:$ARCH \
    libfontconfig1-dev:$ARCH \
    libfontconfig1:$ARCH \
    openssl:$ARCH \
    libssl-dev:$ARCH \
    libwebp-dev:$ARCH \
    libprotobuf-dev:$ARCH \
    libjsoncpp-dev:$ARCH \
    libevent-dev:$ARCH \
    libsnappy-dev:$ARCH \
    libvpx-dev:$ARCH \
    libre2-dev:$ARCH \
    libxslt1-dev:$ARCH \
    libavcodec-dev:$ARCH

apt-get install -y \
    alsa-tools:$ARCH \
    alsa-utils:$ARCH \
    libasound2-plugins:$ARCH \
    pulseaudio:$ARCH \
    liblcms2-2:$ARCH \
    libmng1:$ARCH \
    libpulse0:$ARCH \
    libjson-c-dev:$ARCH \
    libexpat1-dev:$ARCH \
    libdbus-1-3:$ARCH \
    libglib2.0-0:$ARCH \
    libkeyutils-dev:$ARCH \
    libwrap0:$ARCH \
    libacl1:$ARCH \
    libpcre3:$ARCH \
    libgles2-mesa-dev:$ARCH \
    libegl1-mesa-dev:$ARCH \
    libgles2-mesa:$ARCH \
    libegl1-mesa:$ARCH \
    at-spi2-core:$ARCH \
    libatspi2.0-0:$ARCH \
    libatspi2.0-dev:$ARCH \
    xkb-data:$ARCH \
    libxkbcommon-dev:$ARCH \
    libxkbcommon-x11-0:$ARCH \
    libxkbcommon-x11-dev:$ARCH \
    libx11-dev:$ARCH \
    libx11-xcb-dev:$ARCH \
    libxrender-dev:$ARCH \
    libxcb-keysyms1-dev:$ARCH \
    libxcb-image0-dev:$ARCH \
    libxcb-icccm4-dev:$ARCH \
    libxcb-render-util0-dev:$ARCH \
    libxcb-xinerama0-dev:$ARCH \
    libxcb1-dev:$ARCH \
    libxcb-glx0-dev:$ARCH \
    libxcb-shm0-dev:$ARCH \
    libxcb-sync-dev:$ARCH \
    libxcb-xfixes0-dev:$ARCH \
    libxcb-shape0-dev:$ARCH \
    libxcb-randr0-dev:$ARCH \
    libxcb-xtest0-dev:$ARCH \
    libxcb-xkb-dev:$ARCH \
    libxcb-util0-dev:$ARCH \
    flite1-dev:$ARCH \
    libspeechd-dev:$ARCH \
    speech-dispatcher:$ARCH \
    libgstreamer1.0-0:$ARCH \
    gstreamer1.0-tools:$ARCH \
    libxkbcommon0:$ARCH \
    libopus0:$ARCH \
    libopus-dev:$ARCH \
    libopusfile0:$ARCH \
    libopusfile-dev:$ARCH \
    libpango1.0-dev:$ARCH \
    x11proto-dev:$ARCH \
    shared-mime-info:$ARCH \
    libxau-dev:$ARCH \
    libgtk-3-dev:$ARCH

apt-get clean

# Fetch Qt sources, compile and install it

git clone https://code.qt.io/qt/qt5.git qt5source
cd qt5source
git checkout $QTVERSION
git submodule update --init --recursive


# Workaround for armhf case for Qt 5.x
if [ "$ARCH" == "armhf" ]
then
  cp -r qtbase/mkspecs/linux-arm-gnueabi-g++ qtbase/mkspecs/linux-arm-gnueabihf-g++
  sed -i 's/gnueabi/gnueabihf/g' qtbase/mkspecs/linux-arm-gnueabihf-g++/qmake.conf
fi

mkdir build
cd build

export PKG_CONFIG_LIBDIR=/usr/lib/$ARCHITECTURE/pkgconfig:/usr/share/pkgconfig
export PKG_CONFIG_SYSROOT_DIR=/.
export PKG_CONFIG_PREFIX=/usr/lib/$ARCHITECTURE

# Configure Qt
../configure -release -prefix /qt5 -xplatform $XPLATFORM-g++ -opensource -confirm-license -platform linux-g++ -make examples -nomake tests -skip qt3d -skip qtcanvas3d -skip qtdatavis3d -skip qtdoc -skip qtdocgallery -skip qtgamepad -skip qtpurchasing -skip qtsensors -skip qtwayland -skip qtwebengine -cups -accessibility -opengl desktop -gtk -pkg-config

make -j $(($(nproc)+1))
make install -j $(($(nproc)+1))

# Cleanup Docker image
rm -rf /qt5source
apt-get clean autoclean
apt-get autoremove --purge -y
rm -rf /tmp/* /var/{cache,log,backups}/* /var/lib/apt/*

echo 'Recipe1 completed'

